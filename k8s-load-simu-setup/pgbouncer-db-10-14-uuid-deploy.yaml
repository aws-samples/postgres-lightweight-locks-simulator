apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgbouncer-db-10-14-uuid
  namespace: default
  labels:
    app: pgbouncer-db-10-14-uuid
spec:
  revisionHistoryLimit: 10  # removes old replicasets for deployment rollbacks
  strategy:
    rollingUpdate:
      maxUnavailable: 0  # Avoid Terminating and ContainerCreating at the same time
  selector:
    matchLabels:
      app: pgbouncer-db-10-14-uuid
  template:
    metadata:
      labels:
        app: pgbouncer-db-10-14-uuid
    spec:
      # Optional: keep the POD close to the apps:
      #nodeSelector:
      #  purpose: apps
      containers:
        - name: pgbouncer
          #image: 448389607377.dkr.ecr.us-west-2.amazonaws.com/pgb-dd:0.1
          image: edoburu/pgbouncer:1.9.0
          #imagePullPolicy: Always
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
               name: db-10-14-uuid-creds
          env:
            - name: POOL_MODE
              value: transaction
            - name: MAX_CLIENT_CONN
              value: "8000"
            - name: MAX_DB_CONNECTIONS
              value: "110"
            - name: DEFAULT_POOL_SIZE
              value: "110"
            - name: MIN_POOL_SIZE
              value: "10"
            - name: IDLE_TRANSACTION_TIMEOUT
              value: "16"
            - name: QUERY_WAIT_TIMEOUT
              value: "16"
          livenessProbe:
            tcpSocket:
              port: 5432
            periodSeconds: 60
          lifecycle:
            preStop:
              exec:
                # Allow existing queries clients to complete within 120 seconds
                command: ["/bin/sh", "-c", "killall -INT pgbouncer && sleep 120"]
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ['all']
